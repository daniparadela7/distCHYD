"use strict";angular.module("app",["ngAnimate","ngRoute","ngSanitize","ngTouch","angular-inview","matchMedia","ipCookie","angulartics","angulartics.google.analytics","seo","ngMeta"]),angular.module("app").config(["$routeProvider","$locationProvider","$analyticsProvider",function($routeProvider,$locationProvider,$analyticsProvider){$locationProvider.hashPrefix("!"),$locationProvider.html5Mode(!0),NProgress.configure({easing:"ease",speed:500,trickleRate:.02,trickleSpeed:800,showSpinner:!1,minimum:.7}),$analyticsProvider.virtualPageviews(!1),$routeProvider.otherwise({redirectTo:"/hadas"})}]),angular.module("app").constant("$appConfig",{apiUrl:"http://178.62.24.69:8000/api/clubhyd/"}),angular.module("app").filter("html",function($sce){return function(val){return $sce.trustAsHtml(val)}}).filter("limitHtml",function(){return function(text,limit){var changedString=String(text).replace(/<[^>]+>/gm,"");return changedString.length>limit?changedString.substr(0,limit-2)+"...":changedString}}),angular.module("app").directive("backImg",function(){return function(scope,element,attrs){var url=attrs.backImg;element.css({"background-image":"url("+url+")","background-position":"50% 50%","background-repeat":"no-repeat","background-size":"cover",height:attrs.height+"px"||"100px"})}}).directive("prettyp",function(){return function(scope,element,attrs){$("[rel^='prettyPhoto']").prettyPhoto({deeplinking:!1,social_tools:!1,allow_expand:!1})}}),angular.module("app").service("wdkFunctions",["$rootScope","$route",function($rootScope,$route){this.init=function(){this.isActive(),this.tamañoPantalla()},this.animate=function(element,inview,inviewpart,transition,duration,delay){screenSize.is("xs")||!inview||"top"!==inviewpart&&"bottom"!==inviewpart&&"both"!==inviewpart||$(element).hasClass(transition)||($(element).css("animation-delay",delay+"s"),$(element).css("animation-duration",duration+"s"),$(element).addClass("animated "+transition))},this.isActive=function(route){$rootScope.ruta=$route},this.tamañoPantalla=function(){$(window).height()}}]),angular.module("app").run(["$rootScope","$location","$routeParams","$route","$timeout","$analytics","$appConfig","apiService","wdkFunctions","screenSize","ngMeta",function($rootScope,$location,$routeParams,$route,$timeout,$analytics,$appConfig,apiService,wdkFunctions,screenSize,ngMeta){$rootScope.wdkFunctions=wdkFunctions,$rootScope.$appConfig=$appConfig,ngMeta.init(),$(window).on("resize",function(){var windowHeight=$(window).outerHeight();$(".headerBG").outerHeight(windowHeight)}),$rootScope.toggleVisible=function(){if($rootScope.visibleMenu=!$rootScope.visibleMenu,$(".c-hamburger").toggleClass("is-active"),$rootScope.visibleMenu){if($("body, html").addClass("menu-mobile-in"),screenSize.is("xs")||screenSize.is("sm")){var windowHeight=$(window).outerHeight();$(".headerBG").outerHeight(windowHeight)}}else $("body, html").removeClass("menu-mobile-in")},$rootScope.hadasODuendes=function(){var ruta=$location.path();ruta.includes("duendes")?($("#wrapper").addClass("wrapper-duende"),$("#footer-wrapper").addClass("footer-duende"),$("#logoHada").addClass("logoDerecha"),$("#logoDuende").removeClass("logoDerecha"),$("#wrapper").css("background","transparent"),$(".headerBG").addClass("headerBG-duendes"),$rootScope.ruta="duendes"):($("#wrapper").removeClass("wrapper-duende"),$("#footer-wrapper").removeClass("footer-duende"),$("#logoDuende").addClass("logoDerecha"),$("#logoHada").removeClass("logoDerecha"),$(".headerBG").removeClass("headerBG-duendes"),$rootScope.ruta="hadas")},$rootScope.$on("$routeChangeStart",function(){NProgress.start(),$rootScope.hadasODuendes()}),$rootScope.$on("$routeChangeSuccess",function(){$rootScope.visibleMenu=!1,$("body, html").removeClass("menu-mobile-in"),NProgress.done(),wdkFunctions.init(),$rootScope.hadasODuendes(),$analytics.pageTrack($location.path()),$("html, body").animate({scrollTop:0},"slow"),$(".navbar-toggle").removeClass("is-active"),$rootScope.htmlReady()}),$rootScope.$on("$routeChangeError",function(){NProgress.done(),console.error("$routeChangeError")})}]),angular.module("app").service("apiService",["$appConfig","$http","$location",function($appConfig,$http,$location){this.getNodes=function(table){return $http.get($appConfig.apiUrl+table).then(function(response){return response.data},function(response){console.log("Error cargando los nodes."),console.log(response)})},this.getNodesById=function(table,id){return $http.get($appConfig.apiUrl+table+"/"+id).then(function(response){return response.data},function(response){console.log("Error cargando los nodes."),console.log(response)})},this.getNode=function(table,id){return $http.get($appConfig.apiUrl+table+"/"+id).then(function(response){return response.data[0]},function(response){console.log("Error cargando el node."),console.log(response)})},this.addNode=function(table,node){return $http.post($appConfig.apiUrl+table,node).then(function(response){return response.data},function(response){return response})},this.updateNode=function(table,id,node){return $http.put($appConfig.apiUrl+table+"/"+id,node).then(function(response){return response.data},function(response){console.log("Error actualizando el node."),console.log(response)})},this.deleteNode=function(table,id){return $http["delete"]($appConfig.apiUrl+table+"/"+id).then(function(response){return response.data},function(response){console.log("Error eliminando el node."),console.log(response)})}}]);